name: release windows
on:
  workflow_dispatch:
jobs:
  windows-build:
    if: ${{ needs.check_date.outputs.should_run != 'false' }}
    runs-on: ubuntu-latest
    container: niklas2902/py4godot:4.4
    steps:
      - uses: actions/checkout@v3
        with:
          ref: master
          submodules: 'recursive'
      - name: Set up Python 3.11.3
        uses: actions/setup-python@v2
        with:
          python-version: "3.11.3"
      - name: Install MinGW cross-compiler
        run: |
          apt-get update
          apt-get install -y mingw-w64 mingw-w64-tools
      - name: Cache py4godot/classes directory
        id: cache-py4godot-classes
        uses: actions/cache@v3
        with:
          path: py4godot/classes
          key: ${{ runner.os }}-py4godot-classes-${{ hashFiles('**/generate_classes.py', '**/generate_pxd_bridge.py', '**/extension_api.json') }}
          restore-keys: |
            ${{ runner.os }}-py4godot-classes-
      - name: Run Python script and check result
        shell: bash
        run: |
          set +e
          python meson_scripts/does_cache_exist.py
          exit_code=$?
          if [ $exit_code -eq 0 ]; then
            echo "Cache exists"
            # Add any actions you want to take on success
          else
            echo "Cache does not exist"
            exit 0
          fi
          set -e
      - name: Print variables
        run: |
          python meson_scripts/variables.py
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt
          python -m pip install flake8
      - name: Print structure
        run: python meson_scripts/print_tools.py
      - name: Generate files
        run: python generate.py
      - name: Conditional cythonize
        shell: bash
        run: python cythonize_files.py
      - name: Set up cross-compilation environment
        run: |
          export CC=x86_64-w64-mingw32-gcc
          export CXX=x86_64-w64-mingw32-g++-posix
          export AR=x86_64-w64-mingw32-ar
          export STRIP=x86_64-w64-mingw32-strip
          export PKG_CONFIG_PATH=/usr/x86_64-w64-mingw32/lib/pkgconfig
          echo "CC=$CC" >> $GITHUB_ENV
          echo "CXX=$CXX" >> $GITHUB_ENV
          echo "AR=$AR" >> $GITHUB_ENV
          echo "STRIP=$STRIP" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=$PKG_CONFIG_PATH" >> $GITHUB_ENV
      - name: Build
        run: python build.py --target_platform=windows64 --compiler=g++-mingw -create_plugin=False -buildtype=release -run_tests=False -download_godot=True
      - name: Create cache
        run: python meson_scripts/create_cache.py
      - name: Print structure
        run: python meson_scripts/print_tools.py
      - name: Copy MinGW runtime DLLs
        run: |
          # Create a directory for the DLLs
          mkdir -p build/py4godot/mingw_dlls
          
          # Copy essential MinGW runtime DLLs
          cp /usr/x86_64-w64-mingw32/lib/libgcc_s_seh-1.dll build/py4godot/mingw_dlls/ || true
          cp /usr/x86_64-w64-mingw32/lib/libstdc++-6.dll build/py4godot/mingw_dlls/ || true
          cp /usr/x86_64-w64-mingw32/lib/libwinpthread-1.dll build/py4godot/mingw_dlls/ || true
          
          # Alternative locations for DLLs
          cp /usr/lib/gcc/x86_64-w64-mingw32/*/libgcc_s_seh-1.dll build/py4godot/mingw_dlls/ || true
          cp /usr/lib/gcc/x86_64-w64-mingw32/*/libstdc++-6.dll build/py4godot/mingw_dlls/ || true
          cp /usr/x86_64-w64-mingw32/lib/libwinpthread-1.dll build/py4godot/mingw_dlls/ || true
          
          # Find and copy any additional DLLs that might be needed
          find /usr/x86_64-w64-mingw32 -name "*.dll" -exec cp {} build/py4godot/mingw_dlls/ \; || true
          find /usr/lib/gcc/x86_64-w64-mingw32 -name "*.dll" -exec cp {} build/py4godot/mingw_dlls/ \; || true
          
          # List what DLLs were copied
          echo "Copied DLLs:"
          ls -la build/py4godot/mingw_dlls/
      - name: Create archive (zip)
        run: |
          cd python-source
          zip -r build/py4godot-windows64.zip build/py4godot
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: py4godot-windows64
          path: build/py4godot-windows64.zip
          retention-days: 30
