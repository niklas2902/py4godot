# name: nightly windowsðŸŒƒ
# on:
#   workflow_dispatch:
#   schedule:
#     - cron: '0 2 * * *' # run at 2 AM UTC
    
# jobs:
#   check_date:
#     runs-on: ubuntu-latest
#     name: Check latest commit
#     outputs:
#       should_run: ${{ steps.should_run.outputs.should_run }}
#     steps:
#       - uses: actions/checkout@v3
#         with:
#           ref: master
#       - name: print latest_commit
#         run: echo ${{ github.sha }}

#       - id: should_run
#         continue-on-error: true
#         name: check latest commit is less than a day
#         if: ${{ github.event_name == 'schedule' }}
#         run: test -z $(git rev-list  --after="24 hours"  ${{ github.sha }}) && echo "::set-output name=should_run::false"
        
#   windows-build:
#     #needs: check_date
#     #if: ${{ needs.check_date.outputs.should_run != 'false' }}
    
#     runs-on: windows-latest
#     strategy:
#       matrix:
#         include:
#           - PLATFORM: 'windows-64'
#             PYTHON_ARCH: 'x64'
#             VS_ARCH: 'amd64'

#     steps:
#     - uses: actions/checkout@v3
#       with:
#         ref: develop
#     - name: Set up Python 3.8.8
#       uses: actions/setup-python@v2
#       with:
#         python-version: "3.8.8"
        
#     - name: Install Mesa
#       shell: cmd
#       run: |
#         mkdir godot
#         curl.exe -L --output godot/mesa.7z --url https://github.com/pal1000/mesa-dist-win/releases/download/20.3.2/mesa3d-20.3.2-release-msvc.7z
#         "C:\Program Files\7-Zip\7z.exe" x godot/mesa.7z -ogodot
#         cd godot
#         mklink opengl32.dll "x64\opengl32.dll"
#         mklink libglapi.dll "x64\libglapi.dll"
    
#     - name: print structure
#       run: |
#          python meson_scripts/print_tools.py
      
#     - name: Install dependencies
#       run: |
#         python -m pip install -r requirements.txt
#         python -m pip install flake8
#     - name: Init submodule
#       run: |
#         git submodule init
#         git submodule update
#     - name: Lint with flake8
#       run: |
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#     - name: build
#       run: |
#          python build.py --target_platform=windows64 --compiler=clang -run_tests=true -download_godot=true
         
#     - name: print structure
#       run: |
#          python meson_scripts/print_tools.py
#     - name: test
#       run: |
#          meson test -C build_meson/windows64
