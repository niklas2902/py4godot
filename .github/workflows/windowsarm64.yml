name: WEEKLY windows-arm64
on:
  push:
    branches:
      - winarm64      # or 'master', or use ['main', 'dev', 'feature/*'] for multiple

jobs:
  windows-build:
    runs-on: windows-11-arm
    steps:
      - uses: actions/checkout@v3
        with:
          ref: winarm64
          submodules: 'recursive'
      - name: Set up ARM64 Python and pip
        shell: powershell
        run: |
          # Download embedded Python
          Invoke-WebRequest -Uri https://www.python.org/ftp/python/3.11.3/python-3.11.3-embed-arm64.zip -OutFile python.zip
          Expand-Archive python.zip -DestinationPath python_arm64

          # Create Lib and site-packages folders
          New-Item -ItemType Directory -Path python_arm64\Lib\site-packages -Force | Out-Null

          # Enable loading site packages
          Add-Content -Path python_arm64\python._pth -Value "import site"  # At the end of the file

          # Download and install pip
          Invoke-WebRequest -Uri https://bootstrap.pypa.io/get-pip.py -OutFile get-pip.py
          ./python_arm64/python.exe get-pip.py
      - name: Print Architecture
        run:  python meson_scripts/platform_check.py

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Ninja manually
        shell: powershell
        run: |
          Invoke-WebRequest -Uri https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip -OutFile ninja.zip
          Expand-Archive ninja.zip -DestinationPath ninja
          echo "$PWD/ninja" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install dependencies
        run: |
          python -m pip install Cython>=3.0.0 zstandard wget meson>=1.0.0 tqdm


      - name: Generate files
        run: python generate.py -dev_build=True

      - name: Cythonize
        shell: bash
        run: |
            python cythonize_files.py -mode="dev"

      - name: Build
        shell: cmd
        run: |
          python build.py --target_platform=windowsarm64 --compiler=msvc -create_plugin=False -buildtype=release -run_tests=False
      
      - name: Upload Precompiled Code
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: precompiled
          path: .

