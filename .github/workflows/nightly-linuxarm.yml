name: nightly linuxarm
on:
  workflow_dispatch:

jobs:
  linuxarm-build:
    if: ${{ needs.check_date.outputs.should_run != 'false' }}
    runs-on: ubuntu-24.04-arm

    steps:
      - uses: actions/checkout@v3
        with:
          ref: master
          submodules: 'recursive'
      - name: Install system dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
            build-essential \
            cmake \
            libx11-dev \
            libxcursor-dev \
            libxinerama-dev \
            libxrandr-dev \
            libxi-dev \
            libasound2-dev \
            libpulse-dev \
            libudev-dev \
            libvulkan-dev \
            mesa-vulkan-drivers \
            meson \
            ninja-build
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Run Python script and check result
        shell: bash
        run: |
          set +e
          python meson_scripts/does_cache_exist.py
          exit_code=$?
          if [ $exit_code -eq 0 ]; then
            echo "Cache exists"
          else
            echo "Cache does not exist"
            exit 0
          fi
          set -e

      - name: Print variables
        run: |
          python meson_scripts/variables.py

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: linuxarm64-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            linuxarm64-pip-

      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt
          python -m pip install flake8

      - name: Print structure
        run: python meson_scripts/print_tools.py

      - name: Generate files
        run: python generate.py

      - name: Conditional cythonize
        shell: bash
        run: python cythonize_files.py 

      - name: Build
        run: python build.py --target_platform=linuxarm64 --compiler=gcc -create_plugin=False -buildtype=release

      - name: Create cache
        run: python meson_scripts/create_cache.py
      
      - name: Upload build folder as artifact
        uses: actions/upload-artifact@v4
        with:
          name: linuxarm-build
          path: build/

      - name: Print structure
        run: python meson_scripts/print_tools.py
