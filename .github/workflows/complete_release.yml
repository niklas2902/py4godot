name: complete release

on:
  workflow_dispatch:     # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    container: niklas2902/py4godot:4.4
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Set up Python 3.11.3
        uses: actions/setup-python@v2
        with:
          python-version: "3.11.3"

      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt
          python -m pip install flake8

      - name: Print structure
        run: python meson_scripts/print_tools.py

      - name: Generate files
        run: python generate.py

      - name: Cythonize
        run: python cythonize_files.py

      - name: Upload Precompiled Code
        uses: actions/upload-artifact@v4
        with:
          name: precompiled
          path: .

  build_cpp:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: linux
          - os: ubuntu-latest
            target: windows
          - os: macos-latest
            target: macos
          - os: ubuntu-24.04-arm
            target: linux-arm

    steps:
      - name: Download Precompiled Code
        uses: actions/download-artifact@v4
        with:
          name: precompiled

      - name: Install dependencies and build for linux  (Ubuntu)
        if: matrix.target == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build meson pkg-config libsdl2-dev python3-venv
          python3 -m venv venv
          source venv/bin/activate
          python -m pip install -r requirements.txt
          python build.py --target_platform=linux64 --compiler=gcc 
          python build.py --target_platform=windows64 --compiler=g++-mingw 

      - name: Install dependencies and build for Windows  (Ubuntu)
        if: matrix.target == 'windows'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build meson pkg-config libsdl2-dev python3-venv mingw-w64 
          python3 -m venv venv
          source venv/bin/activate
          python -m pip install -r requirements.txt
          python build.py --target_platform=windows64 --compiler=g++-mingw 

      - name: Install dependencies and build  (Ubuntu Arm 64)
        if: matrix.target == 'linux-arm'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build meson pkg-config libsdl2-dev python3-venv
          python3 -m venv venv
          source venv/bin/activate
          python -m pip install -r requirements.txt
          python build.py --target_platform=linuxarm64 --compiler=gcc 

      - name: Install dependencies and build (macOS)
        if: matrix.target == 'macos'
        run: |
          brew update
          brew install cmake ninja meson pkg-config sdl2
          python3 -m venv venv
          source venv/bin/activate
          python -m pip install -r requirements.txt
          python -m pip install flake8
          python build.py --target_platform=darwin64 --compiler=clang

      - name: Upload py4godot build artifact
        uses: actions/upload-artifact@v4
        with:
          name: py4godot-${{ matrix.target }}
          path: build/py4godot/
          retention-days: 30

  combine:
    needs: build_cpp
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux
        uses: actions/download-artifact@v4
        with:
          name: py4godot-linux
          path: install_dir/addons/py4godot

      - name: Download Linux ARM
        uses: actions/download-artifact@v4
        with:
          name: py4godot-linux-arm
          path: install_dir/addons/py4godot

      - name: Download Macos
        uses: actions/download-artifact@v4
        with:
          name: py4godot-macos
          path: install_dir/addons/py4godot

      - name: Download Windows
        uses: actions/download-artifact@v4
        with:
          name: py4godot-windows
          path: install_dir/addons/py4godot

      - name: Upload Zipped Artifact
        uses: actions/upload-artifact@v4
        with:
          name: py4godot
          path: install_dir
